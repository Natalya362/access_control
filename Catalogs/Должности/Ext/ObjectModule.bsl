Процедура ПередЗаписью(Отказ)
	
	// Пропускаем проверку, если запись уже отменена
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	// Проверка уникальности должности
	Если Не ЭтоГруппа Тогда
		Если Не ЭтоНовый() Тогда
			// Если это не новая запись, исключаем текущий объект из проверки
			УсловиеПоСсылке = "И Ссылка <> &ТекущаяСсылка";
		Иначе
			УсловиеПоСсылке = "";
		КонецЕсли;
		
		// Очищаем значение Должность от лишних пробелов
		ДолжностьДляПроверки = СокрЛП(ЭтотОбъект.Должность);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	Должности.Ссылка,
			|	Должности.Должность
			|ИЗ
			|	Справочник.Должности КАК Должности
			|ГДЕ
			|	Должности.Должность = &Должность
			|	И Должности.Должность <> """"
			|	И НЕ Должности.ЭтоГруппа
			|	И НЕ Должности.ПометкаУдаления
			|	" + УсловиеПоСсылке;
		
		Запрос.УстановитьПараметр("Должность", ДолжностьДляПроверки);
		Если Не ЭтоНовый() Тогда
			Запрос.УстановитьПараметр("ТекущаяСсылка", ЭтотОбъект.Ссылка);
		КонецЕсли;
		
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда
			// Добавляем отладку для понимания, что именно нашёл запрос
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				Сообщить("Найдена существующая должность: """ + Выборка.Должность + """ (Ссылка: " + Выборка.Ссылка + ")");
			КонецЦикла;
			Сообщить("Должность """ + ЭтотОбъект.Должность + """ уже существует в справочнике!");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЭтоГруппа Тогда
		// Определяем родителя на основе текста должности
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Должности.Ссылка
			|ИЗ
			|	Справочник.Должности КАК Должности
			|ГДЕ
			|	Должности.ЭтоГруппа
			|	И Должности.Родитель = ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)";
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			// Сравниваем с ключевыми словами
			ДолжностьТекст = НРег(СокрЛП(ЭтотОбъект.Должность));
			Если Выборка.Ссылка.Наименование = "Руководители" И (Найти(ДолжностьТекст, "руководитель") > 0 Или Найти(ДолжностьТекст, "директор") > 0 Или Найти(ДолжностьТекст, "начальник") > 0) Тогда
				ЭтотОбъект.Родитель = Выборка.Ссылка;
				Сообщить("Должность """ + ЭтотОбъект.Должность + """ классифицирована как Руководитель.");
			ИначеЕсли Выборка.Ссылка.Наименование = "Специалисты" И (Найти(ДолжностьТекст, "специалист") > 0 Или Найти(ДолжностьТекст, "инженер") > 0 Или Найти(ДолжностьТекст, "аналитик") > 0) Тогда
				ЭтотОбъект.Родитель = Выборка.Ссылка;
				Сообщить("Должность """ + ЭтотОбъект.Должность + """ классифицирована как Специалист.");
			ИначеЕсли Выборка.Ссылка.Наименование = "Рабочие" И (Найти(ДолжностьТекст, "рабочий") > 0 Или Найти(ДолжностьТекст, "оператор") > 0 Или Найти(ДолжностьТекст, "техник") > 0 Или Найти(ДолжностьТекст, "контролёр") > 0) Тогда
				ЭтотОбъект.Родитель = Выборка.Ссылка;
				Сообщить("Должность """ + ЭтотОбъект.Должность + """ классифицирована как Рабочий.");
			КонецЕсли;
		КонецЦикла;
		
		// Если родитель не определён, помещаем в "Рабочие" по умолчанию
		Если Не ЗначениеЗаполнено(ЭтотОбъект.Родитель) Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	Должности.Ссылка
				|ИЗ
				|	Справочник.Должности КАК Должности
				|ГДЕ
				|	Должности.Наименование = ""Рабочие""
				|	И Должности.ЭтоГруппа
				|	И Должности.Родитель = ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)";
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			Если Выборка.Следующий() Тогда
				ЭтотОбъект.Родитель = Выборка.Ссылка;
				Сообщить("Должность """ + ЭтотОбъект.Должность + """ помещена в папку ""Рабочие"" по умолчанию.");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры