Процедура ПередЗаписью(Отказ)
	
	// Пропускаем проверку, если запись уже отменена
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Проверка обязательного поля ФИО (Наименование)
	Если Не ЗначениеЗаполнено(ЭтотОбъект.Наименование) Тогда
		Сообщить("Поле ФИО не заполнено!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Проверка, что ФИО содержит только буквы и пробелы
	ФИО = СокрЛП(ЭтотОбъект.Наименование);
	Для Позиция = 1 По СтрДлина(ФИО) Цикл
		Символ = Сред(ФИО, Позиция, 1);
		Если Не (СтрНайти(" абвгдеёжзийклмнопрстуфхцчшщъыьэюяАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ-", Символ) > 0) Тогда
			Сообщить("ФИО содержит недопустимые символы! Допустимы только буквы и пробелы.");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	// Проверка обязательного поля ДатаРождения
	Если Не ЗначениеЗаполнено(ЭтотОбъект.ДатаРождения) Тогда
		Сообщить("Поле Дата рождения не заполнено!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
		
	// Проверка обязательного поля НомерДокумента
	Если Не ЗначениеЗаполнено(ЭтотОбъект.НомерДокумента) Тогда
		Сообщить("Поле Номер документа не заполнено!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Проверка формата НомерДокумента (4 цифры, пробел, 6 цифр)
	НомерДокумента = СокрЛП(ЭтотОбъект.НомерДокумента);
	МассивЧастей = СтрРазделить(НомерДокумента, " ", Ложь);
	Если МассивЧастей.Количество() <> 2 Тогда
		Сообщить("Номер документа должен содержать 4 цифры, пробел и 6 цифр (например, 1234 567890)!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Серия = МассивЧастей[0];
	Номер = МассивЧастей[1];
	
	// Проверка серии (4 цифры)
	Если СтрДлина(Серия) <> 4 Тогда
		Сообщить("Серия документа должна содержать ровно 4 цифры!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Для Позиция = 1 По СтрДлина(Серия) Цикл
		Символ = Сред(Серия, Позиция, 1);
		Если СтрНайти("0123456789", Символ) = 0 Тогда
			Сообщить("Серия документа содержит недопустимые символы! Допустимы только цифры.");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	// Проверка номера (6 цифр)
	Если СтрДлина(Номер) <> 6 Тогда
		Сообщить("Номер документа должен содержать ровно 6 цифр!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Для Позиция = 1 По СтрДлина(Номер) Цикл
		Символ = Сред(Номер, Позиция, 1);
		Если СтрНайти("0123456789", Символ) = 0 Тогда
			Сообщить("Номер документа содержит недопустимые символы! Допустимы только цифры.");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	// Проверка обязательного поля КонтактныйТелефон
	Если Не ЗначениеЗаполнено(ЭтотОбъект.КонтактныйТелефон) Тогда
		Сообщить("Поле Контактный телефон не заполнено!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Проверка формата КонтактныйТелефон: +7 (XXX) XXX-XX-XX
	Телефон = СокрЛП(ЭтотОбъект.КонтактныйТелефон);
	ДопустимыеСимволы = "0123456789+() -";
	Для Позиция = 1 По СтрДлина(Телефон) Цикл
		Символ = Сред(Телефон, Позиция, 1);
		Если СтрНайти(ДопустимыеСимволы, Символ) = 0 Тогда
			Сообщить("Контактный телефон содержит недопустимые символы! Допустимы только цифры, '+', '(', ')', пробел и '-'.");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	// Проверка длины
	Если СтрДлина(Телефон) > 20 Тогда
		Сообщить("Контактный телефон превышает допустимую длину (20 символов)!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Проверка формата телефона: +7 (XXX) XXX-XX-XX
	МассивЧастейТелефона = СтрРазделить(Телефон, " ", Ложь);
	Если МассивЧастейТелефона.Количество() <> 3 Тогда
		Сообщить("Контактный телефон должен быть в формате +7 (XXX) XXX-XX-XX (например, +7 (999) 123-45-67)!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Проверка первой части: +7
	Часть1 = МассивЧастейТелефона[0];
	Если Часть1 <> "+7" Тогда
		Сообщить("Контактный телефон должен начинаться с '+7'!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Проверка второй части: (XXX)
	Часть2 = МассивЧастейТелефона[1];
	Если СтрДлина(Часть2) <> 5 Или Лев(Часть2, 1) <> "(" Или Прав(Часть2, 1) <> ")" Тогда
		Сообщить("Код региона в контактном телефоне должен быть в формате (XXX), например (999)!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	КодРегиона = Сред(Часть2, 2, 3);
	Для Позиция = 1 По СтрДлина(КодРегиона) Цикл
		Символ = Сред(КодРегиона, Позиция, 1);
		Если СтрНайти("0123456789", Символ) = 0 Тогда
			Сообщить("Код региона в контактном телефоне должен содержать только цифры!");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	// Проверка третьей части: XXX-XX-XX
	Часть3 = МассивЧастейТелефона[2];
	МассивПодчастей = СтрРазделить(Часть3, "-", Ложь);
	Если МассивПодчастей.Количество() <> 3 Тогда
		Сообщить("Номер телефона должен быть в формате XXX-XX-XX (например, 123-45-67)!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Проверка XXX
	Если СтрДлина(МассивПодчастей[0]) <> 3 Тогда
		Сообщить("Первая часть номера телефона должна содержать 3 цифры!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Для Позиция = 1 По СтрДлина(МассивПодчастей[0]) Цикл
		Символ = Сред(МассивПодчастей[0], Позиция, 1);
		Если СтрНайти("0123456789", Символ) = 0 Тогда
			Сообщить("Первая часть номера телефона должна содержать только цифры!");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	// Проверка XX
	Если СтрДлина(МассивПодчастей[1]) <> 2 Тогда
		Сообщить("Вторая часть номера телефона должна содержать 2 цифры!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Для Позиция = 1 По СтрДлина(МассивПодчастей[1]) Цикл
		Символ = Сред(МассивПодчастей[1], Позиция, 1);
		Если СтрНайти("0123456789", Символ) = 0 Тогда
			Сообщить("Вторая часть номера телефона должна содержать только цифры!");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	// Проверка XX
	Если СтрДлина(МассивПодчастей[2]) <> 2 Тогда
		Сообщить("Третья часть номера телефона должна содержать 2 цифры!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Для Позиция = 1 По СтрДлина(МассивПодчастей[2]) Цикл
		Символ = Сред(МассивПодчастей[2], Позиция, 1);
		Если СтрНайти("0123456789", Символ) = 0 Тогда
			Сообщить("Третья часть номера телефона должна содержать только цифры!");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	// Проверка обязательного поля Почта
	Если Не ЗначениеЗаполнено(ЭтотОбъект.Почта) Тогда
		Сообщить("Поле Почта не заполнено!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Проверка формата Почта
	ПочтаБезПробелов = СокрЛП(ЭтотОбъект.Почта);
	Если СтрДлина(ПочтаБезПробелов) > 30 Тогда
		Сообщить("Почта превышает допустимую длину (30 символов)!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Если СтрНайти(ПочтаБезПробелов, "@") = 0 Тогда
		Сообщить("Почта должна содержать символ '@'!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// Проверка на недопустимые символы в почте
	НедопустимыеСимволы = "абвгдеёжзийклмнопрстуфхцчшщъыьэюяАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ!№;%%:?%(/ *-,ЮБ";
	Для Позиция = 1 По СтрДлина(ПочтаБезПробелов) Цикл
		Символ = Сред(ПочтаБезПробелов, Позиция, 1);
		Если СтрНайти(НедопустимыеСимволы, Символ) > 0 Тогда
			Сообщить("Почта содержит недопустимые символы! Недопустимы русские буквы и символы !№;%%:?%(/*-+,Ю,Б.");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	// Автоматическое заполнение кода, если он пустой
	Если Не ЗначениеЗаполнено(ЭтотОбъект.Код) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ФизическиеЛица.Код
			|ИЗ
			|	Справочник.ФизическиеЛица КАК ФизическиеЛица
			|ГДЕ
			|	НЕ ФизическиеЛица.ПометкаУдаления";
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		МаксКод = 0;
		Пока Выборка.Следующий() Цикл
			// Пытаемся преобразовать код в число, игнорируя некорректные значения
			Попытка
				ТекКод = Число(Выборка.Код);
				МаксКод = Макс(МаксКод, ТекКод);
			Исключение
				// Игнорируем некорректные значения
				Продолжить;
			КонецПопытки;
		КонецЦикла;
		
		ЭтотОбъект.Код = Формат(МаксКод + 1, "ЧЦ=9; ЧВН=; ЧГ=0");
		
	КонецЕсли;
	
	// Проверка уникальности кода
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ФизическиеЛица.Ссылка
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.Код = &Код
		|	И ФизическиеЛица.Ссылка <> &ТекущаяСсылка
		|	И НЕ ФизическиеЛица.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Код", ЭтотОбъект.Код);
	Запрос.УстановитьПараметр("ТекущаяСсылка", ЭтотОбъект.Ссылка);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Сообщить("Физическое лицо с кодом """ + ЭтотОбъект.Код + """ уже существует!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры      

&НаСервере
Процедура ПриЗаписи(Отказ)
    Если Отказ Тогда
        Возврат;
    КонецЕсли;
    
    // Формируем наименование на основе ФИО
    Если ЗначениеЗаполнено(ЭтотОбъект.ФИО) Тогда
        ЭтотОбъект.Наименование = СокрЛП(ЭтотОбъект.ФИО);
    Иначе
        ЭтотОбъект.Наименование = "";
    КонецЕсли;
КонецПроцедуры