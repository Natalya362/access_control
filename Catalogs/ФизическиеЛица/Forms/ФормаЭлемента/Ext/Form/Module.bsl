// Выполняется при создании формы на сервере
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    // Настройка динамического списка связанных посетителей
    Если Элементы.Найти("СвязанныеПосетители") <> Неопределено Тогда
        Элементы.СвязанныеПосетители.Отбор.Элементы.Очистить();
        ЭлементОтбора = Элементы.СвязанныеПосетители.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
        ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ФизическоеЛицо");
        ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
        ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;
        ЭлементОтбора.Использование = Истина;
    КонецЕсли;
КонецПроцедуры

// Выполняется перед записью объекта
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
    // Проверка формата ФИО
    Если ЗначениеЗаполнено(ТекущийОбъект.Наименование) Тогда
        ФИО = СокрЛП(ТекущийОбъект.Наименование);
        МассивСлов = СтрРазделить(ФИО, " ", Ложь);
        Если МассивСлов.Количество() <> 3 Тогда
            Сообщить("ФИО должно быть в формате 'Фамилия Имя Отчество'!");
            Отказ = Истина;
            Возврат;
        КонецЕсли;
        // Проверка, что каждое слово начинается с заглавной буквы
        Для Каждого Слово Из МассивСлов Цикл
            Если НЕ (ВРег(Лев(Слово, 1)) = Лев(Слово, 1)) Тогда
                Сообщить("Каждое слово в ФИО должно начинаться с заглавной буквы!");
                Отказ = Истина;
                Возврат;
            КонецЕсли;
        КонецЦикла;
    Иначе
        Сообщить("Поле 'ФИО' обязательно для заполнения!");
        Отказ = Истина;
        Возврат;
    КонецЕсли;

    // Проверка документа
    Если НЕ ЗначениеЗаполнено(ТекущийОбъект.ДокументУдостоверяющийЛичность) Тогда
        Сообщить("Поле 'Документ удостоверяющий личность' обязательно для заполнения!");
        Отказ = Истина;
        Возврат;
    КонецЕсли;

    // Проверка номера документа
    Если НЕ ЗначениеЗаполнено(ТекущийОбъект.НомерДокумента) Тогда
        Сообщить("Поле 'Номер документа' обязательно для заполнения!");
        Отказ = Истина;
        Возврат;
    КонецЕсли;

    // Проверка формата номера документа (для паспорта)
    Если ЗначениеЗаполнено(ТекущийОбъект.ДокументУдостоверяющийЛичность)
        И ТекущийОбъект.ДокументУдостоверяющийЛичность = Справочники.ТипыДокументов.НайтиПоНаименованию("Паспорт", Истина) Тогда
        Номер = СокрЛП(ТекущийОбъект.НомерДокумента);
        МассивЧастей = СтрРазделить(Номер, " ", Ложь);
        Если МассивЧастей.Количество() <> 2
            ИЛИ СтрДлина(МассивЧастей[0]) <> 4
            ИЛИ СтрДлина(МассивЧастей[1]) <> 6
            ИЛИ НЕ ТолькоЦифрыВСтроке(МассивЧастей[1]) Тогда
            Сообщить("Номер паспорта должен быть в формате 'XXXX XXXXXX', где X — цифры!");
            Отказ = Истина;
            Возврат;
        КонецЕсли;
    КонецЕсли;

    // Проверка формата телефона
    Если ЗначениеЗаполнено(ТекущийОбъект.КонтактныйТелефон) Тогда
        Телефон = СокрЛП(ТекущийОбъект.КонтактныйТелефон);
        ТелефонЧисла = "";
        Для НомерСимвола = 1 По СтрДлина(Телефон) Цикл
            Символ = Сред(Телефон, НомерСимвола, 1);
            Если ТолькоЦифрыВСтроке(Символ) Тогда
                ТелефонЧисла = ТелефонЧисла + Символ;
            КонецЕсли;
        КонецЦикла;

        Если СтрДлина(ТелефонЧисла) = 11 Тогда
            Если НЕ (Лев(ТелефонЧисла, 1) = "8" ИЛИ Лев(ТелефонЧисла, 1) = "7") Тогда
                Сообщить("Телефон должен начинаться с '8' или '+7'!");
                Отказ = Истина;
                Возврат;
            КонецЕсли;
            ТекущийОбъект.КонтактныйТелефон = СтрШаблон("8-%1-%2-%3-%4",
                Сред(ТелефонЧисла, 2, 3),
                Сред(ТелефонЧисла, 5, 3),
                Сред(ТелефонЧисла, 8, 2),
                Сред(ТелефонЧисла, 10, 2));
        Иначе
            Сообщить("Телефон должен содержать 11 цифр (включая код страны)!");
            Отказ = Истина;
            Возврат;
        КонецЕсли;
    КонецЕсли;

    // Проверка уникальности по ФИО и номеру документа
    Если ЗначениеЗаполнено(ТекущийОбъект.НомерДокумента) Тогда
        Запрос = Новый Запрос;
        Запрос.Текст =
        "ВЫБРАТЬ ПЕРВЫЕ 1
        |    ФизическиеЛица.Ссылка
        |ИЗ
        |    Справочник.ФизическиеЛица КАК ФизическиеЛица
        |ГДЕ
        |    ФизическиеЛица.Наименование = &Наименование
        |    И ФизическиеЛица.НомерДокумента = &НомерДокумента
        |    И ФизическиеЛица.Ссылка <> &Ссылка";
        Запрос.УстановитьПараметр("Наименование", ТекущийОбъект.Наименование);
        Запрос.УстановитьПараметр("НомерДокумента", ТекущийОбъект.НомерДокумента);
        Запрос.УстановитьПараметр("Ссылка", ТекущийОбъект.Ссылка);
        Результат = Запрос.Выполнить();
        Если НЕ Результат.Пустой() Тогда
            Сообщить("Физическое лицо с таким ФИО и номером документа уже существует!");
            Отказ = Истина;
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры

// Обработчик изменения поля Наименование (ФИО)
&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
    ФИО = Объект.Наименование;
    Если ЗначениеЗаполнено(ФИО) Тогда
        МассивСлов = СтрРазделить(ФИО, " ", Ложь);
        Если МассивСлов.Количество() <> 3 Тогда
            Предупреждение("ФИО должно быть в формате 'Фамилия Имя Отчество'!");
            Объект.Наименование = "";
        Иначе
            // Проверяем заглавные буквы
            Для Каждого Слово Из МассивСлов Цикл
                Если НЕ (ВРег(Лев(Слово, 1)) = Лев(Слово, 1)) Тогда
                    Предупреждение("Каждое слово в ФИО должно начинаться с заглавной буквы!");
                    Объект.Наименование = "";
                    Прервать;
                КонецЕсли;
            КонецЦикла;
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры

// Обработчик изменения поля КонтактныйТелефон
&НаКлиенте
Процедура КонтактныйТелефонПриИзменении(Элемент)
    Телефон = Объект.КонтактныйТелефон;
    Если ЗначениеЗаполнено(Телефон) Тогда
        ТелефонЧисла = "";
        Для НомерСимвола = 1 По СтрДлина(Телефон) Цикл
            Символ = Сред(Телефон, НомерСимвола, 1);
            Если ТолькоЦифрыВСтроке(Символ) Тогда
                ТелефонЧисла = ТелефонЧисла + Символ;
            КонецЕсли;
        КонецЦикла;

        Если СтрДлина(ТелефонЧисла) = 11 Тогда
            Если Лев(ТелефонЧисла, 1) = "7" Тогда
                ТелефонЧисла = "8" + Сред(ТелефонЧисла, 2);
            КонецЕсли;
            Если Лев(ТелефонЧисла, 1) = "8" Тогда
                Объект.КонтактныйТелефон = СтрШаблон("8-%1-%2-%3-%4",
                    Сред(ТелефонЧисла, 2, 3),
                    Сред(ТелефонЧисла, 5, 3),
                    Сред(ТелефонЧисла, 8, 2),
                    Сред(ТелефонЧисла, 10, 2));
            Иначе
                Предупреждение("Телефон должен начинаться с '8' или '+7'!");
                Объект.КонтактныйТелефон = "";
            КонецЕсли;
        Иначе
            Предупреждение("Телефон должен содержать 11 цифр (включая код страны)!");
            Объект.КонтактныйТелефон = "";
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры

// Обработчик изменения поля НомерДокумента
&НаКлиенте
Процедура НомерДокументаПриИзменении(Элемент)
    Если ЗначениеЗаполнено(Объект.ДокументУдостоверяющийЛичность)
        И Объект.ДокументУдостоверяющийЛичность = ПредопределенноеЗначение("Справочник.ТипыДокументов.Паспорт") Тогда
        Номер = СокрЛП(Объект.НомерДокумента);
        МассивЧастей = СтрРазделить(Номер, " ", Ложь);
        Если МассивЧастей.Количество() <> 2
            ИЛИ СтрДлина(МассивЧастей[0]) <> 4
            ИЛИ СтрДлина(МассивЧастей[1]) <> 6
            ИЛИ НЕ ТолькоЦифрыВСтроке(МассивЧастей[1]) Тогда
            Предупреждение("Номер паспорта должен быть в формате 'XXXX XXXXXX', где X — цифры!");
            Объект.НомерДокумента = "";
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры

// Обработчик выбора документа удостоверяющего личность
&НаКлиенте
Процедура ДокументУдостоверяющийЛичностьПриИзменении(Элемент)
    Если ЗначениеЗаполнено(Объект.НомерДокумента)
        И Объект.ДокументУдостоверяющийЛичность = ПредопределенноеЗначение("Справочник.ТипыДокументов.Паспорт") Тогда
        НомерДокументаПриИзменении(Элемент);
    КонецЕсли;
КонецПроцедуры


// Проверяет, содержит ли строка только цифры
// Параметры:
//  Строка - Строка - проверяемая строка
// Возвращаемое значение:
//  Булево - Истина, если строка содержит только цифры, иначе Ложь
&НаКлиентеНаСервереБезКонтекста
Функция ТолькоЦифрыВСтроке(Строка)
    Если ПустаяСтрока(Строка) Тогда
        Возврат Ложь;
    КонецЕсли;

    Для Позиция = 1 По СтрДлина(Строка) Цикл
        КодСимвола = КодСимвола(Сред(Строка, Позиция, 1));
        Если КодСимвола < 48 Или КодСимвола > 57 Тогда // Коды цифр от 0 до 9: 48-57
            Возврат Ложь;
        КонецЕсли;
    КонецЦикла;

    Возврат Истина;
КонецФункции