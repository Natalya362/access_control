Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
    Если ЭтоНовый() Тогда
        УстановитьВремя(РежимАвтоВремя.НеИспользовать);
        Дата = ТекущаяДатаСеанса();
    Иначе
        Сообщить("Запись существующего документа запрещена!");
        Отказ = Истина;
        Возврат;
    КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
    // Включаем запись движений
    Движения.ДвиженияДоступа.Записывать = Истина;
    Движения.ДвиженияТС.Записывать = Истина;

    // Проверка обязательных полей
    Если НЕ ЗначениеЗаполнено(Пропуск) Тогда
        Сообщить("Не указан пропуск!");
        Отказ = Истина;
        Возврат;
    КонецЕсли;

    Если НЕ ЗначениеЗаполнено(ЗонаДоступа) Тогда
        Сообщить("Не указана зона доступа!");
        Отказ = Истина;
        Возврат;
    КонецЕсли;

    Если НЕ ЗначениеЗаполнено(Посетитель) Тогда
        Сообщить("Не указан посетитель!");
        Отказ = Истина;
        Возврат;
    КонецЕсли;

    // Проверяем, что пропуск действующий
    СтатусВыдан = Справочники.СтатусыПропусков.НайтиПоНаименованию("Выдан", Истина);
    Если НЕ ЗначениеЗаполнено(СтатусВыдан) Тогда
        Сообщить("Статус 'Выдан' не найден в справочнике СтатусыПропусков!");
        Отказ = Истина;
        Возврат;
    КонецЕсли;

    ТекущаяДата = ТекущаяДатаСеанса();

    // Проверка типа пропуска и соответствия посетителя
    Если ТипЗнч(Пропуск) = Тип("ДокументСсылка.ВыдачаПропуска") Тогда
        Если Пропуск.Статус <> СтатусВыдан ИЛИ Пропуск.ДатаОкончания < ТекущаяДата Тогда
            Сообщить("Пропуск " + Пропуск + " недействителен или истёк срок действия!");
            Отказ = Истина;
            Возврат;
        КонецЕсли;

    ИначеЕсли ТипЗнч(Пропуск) = Тип("ДокументСсылка.ВыдачаПропускаНаТС") Тогда
        Если Пропуск.Статус <> СтатусВыдан ИЛИ Пропуск.ДатаОкончания < ТекущаяДата Тогда
            Сообщить("Пропуск " + Пропуск + " недействителен или истёк срок действия!");
            Отказ = Истина;
            Возврат;
        КонецЕсли;

        // Проверка заполненности ТранспортногоСредства
        Если НЕ ЗначениеЗаполнено(Пропуск.ТранспортноеСредство) Тогда
            Сообщить("Транспортное средство в пропуске " + Пропуск + " не указано!");
            Отказ = Истина;
            Возврат;
        КонецЕсли;

    Иначе
        Сообщить("Некорректный тип пропуска: " + ТипЗнч(Пропуск));
        Отказ = Истина;
        Возврат;
    КонецЕсли;

    // Проверка уникальности движения
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ ПЕРВЫЕ 1 Период 
        |ИЗ РегистрНакопления.ДвиженияДоступа 
        |ГДЕ Посетитель = &Посетитель И ЗонаДоступа = &ЗонаДоступа И Период = &Период
        |ОБЪЕДИНИТЬ ВСЕ
        |ВЫБРАТЬ ПЕРВЫЕ 1 Период 
        |ИЗ РегистрНакопления.ДвиженияТС 
        |ГДЕ Посетитель = &Посетитель И ЗонаДоступа = &ЗонаДоступа И Период = &Период";
    Запрос.УстановитьПараметр("Посетитель", Посетитель);
    Запрос.УстановитьПараметр("ЗонаДоступа", ЗонаДоступа);
    Запрос.УстановитьПараметр("Период", Дата);
    Если НЕ Запрос.Выполнить().Пустой() Тогда
        Сообщить("Движение для посетителя " + Строка(Посетитель) + " с зоной " + Строка(ЗонаДоступа) + " уже зарегистрировано!");
        Отказ = Истина;
        Возврат;
    КонецЕсли;

    // Формируем движения в зависимости от типа пропуска
    НачатьТранзакцию();
    Попытка
        // Блокируем пропуск
        ПропускОбъект = Пропуск.ПолучитьОбъект();
        Если ПропускОбъект = Неопределено Тогда
            ВызватьИсключение "Пропуск не найден!";
        КонецЕсли;
        ПропускОбъект.Заблокировать();

        Если ТипЗнч(Пропуск) = Тип("ДокументСсылка.ВыдачаПропуска") Тогда
            // Движение в ДвиженияДоступа
            Движение = Движения.ДвиженияДоступа.Добавить();
            Движение.Период = Дата;
            Движение.Посетитель = Посетитель;
            Движение.ЗонаДоступа = ЗонаДоступа;
        ИначеЕсли ТипЗнч(Пропуск) = Тип("ДокументСсылка.ВыдачаПропускаНаТС") Тогда
            // Получаем транспортніое средство из пропуска
            ТранспортноеСредство = Пропуск.ТранспортноеСредство;
            Если НЕ ЗначениеЗаполнено(ТранспортноеСредство) Тогда
                ВызватьИсключение "Транспортное средство в пропуске не указано!";
            КонецЕсли;

            // Движение в ДвиженияТС
            Движение = Движения.ДвиженияТС.Добавить();
            Движение.Период = Дата;
            Движение.Посетитель = Посетитель;
            Движение.ТранспортноеСредство = ТранспортноеСредство;
            Движение.ЗонаДоступа = ЗонаДоступа;
        КонецЕсли;

        // Обновляем зону доступа в пропуске
        ПропускОбъект.ЗонаДоступа = ЗонаДоступа;
        ПропускОбъект.Записать();

        ЗафиксироватьТранзакцию();
    Исключение
        ОтменитьТранзакцию();
        Сообщить("Ошибка при проведении: " + ОписаниеОшибки());
        Отказ = Истина;
        Возврат;
    КонецПопытки;
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
    // Запрещаем отмену проведения для существующего документа
    Сообщить("Отмена проведения существующего документа запрещена!");
    Отказ = Истина;
    Возврат;

    // Очищаем движения
    Движения.ДвиженияДоступа.Записывать = Истина;
    Движения.ДвиженияДоступа.Очистить();
    Движения.ДвиженияТС.Записывать = Истина;
    Движения.ДвиженияТС.Очистить();

    // Сбрасываем зону доступа в пропуске
    НачатьТранзакцию();
    Попытка
        ПропускОбъект = Пропуск.ПолучитьОбъект();
        Если ПропускОбъект <> Неопределено Тогда
            ПропускОбъект.Заблокировать();
            ПропускОбъект.ЗонаДоступа = Справочники.ЗоныДоступа.ПустаяСсылка();
            ПропускОбъект.Записать();
        КонецЕсли;

        ЗафиксироватьТранзакцию();
    Исключение
        ОтменитьТранзакцию();
        Сообщить("Ошибка при сбросе зоны доступа: " + ОписаниеОшибки());
        Отказ = Истина;
    КонецПопытки;
КонецПроцедуры